/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define NUMSYM 1
#define FUNCTION 2
#define ADMIN 3

&caps_word {
    continue-list = <UNDERSCORE>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            // ------------------------------------------------------------------------------------             -----------------------------------------------------------------
            // | TAB            | Q     | W    | E               | R              | T             |             | Y             | U         | I        | O      | P       | DEL |
            // | ALT/ESC        | A     | S    | D               | F              | G             |             | H             | J         | K        | L      | ;:      | '"  |
            // | SHFT           | Z     | X    | C               | V              | B             |             | N             | M         | ,<       | .>     | /?      | ~   |
            //                                 | CTRL/ESC        | LGUI/RET       | FUNC/CAPS WRD |             | NUMSYM/BSPC   | SPC       | RSHIFT   |
            label = "Qwerty";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E                 &kp R         &kp T               &kp Y            &kp U      &kp I       &kp O    &kp P     &kp DEL
&mt LEFT_ALT ESC  &kp A  &kp S  &kp D                 &kp F         &kp G               &kp H            &kp J      &kp K       &kp L    &kp SEMI  &kp SQT
&sk LSHIFT        &kp Z  &kp X  &kp C                 &kp V         &kp B               &kp N            &kp M      &kp COMMA   &kp DOT  &kp FSLH  &kp TILDE
                                &mt LEFT_CONTROL ESC  &mt LGUI RET  &lt 1 LEFT_SHIFT    &lt 2 BACKSPACE  &kp SPACE  &caps_word
            >;
        };

        numsym_layer {
            // -----------------------------------------                                                        -------------------------------------
            // | ~       |  !  |  @  |  #  |  $  |  %  |                                                        |  ^  |  &  |  *  |  (  |  )  |  `~ |
            // | _       |  1  |  2  |  3  |  4  |  5  |                                                        |  6  |  7  |  8  |  9  |  0  | "|" |
            // | =       |  +  |  -  |  *  |  /  |  <  |                                                        |  >  |  [  |  ]  |  {  |  }  |  \  |
            //                       | GUI |     | ENT |                                                        | SPC | SPC | ALT |
            label = "Num/Sym";
            bindings = <
&kp TILDE  &kp EXCL     &kp AT        &kp HASH         &kp DLLR       &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp GRAVE
&kp UNDER  &kp N1       &kp N2        &kp N3           &kp N4         &kp N5       &kp N6     &kp N7    &kp N8           &kp N9    &kp N0    &kp PIPE
&kp EQUAL  &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp LT       &kp GT     &kp PLUS  &kp LBRC         &kp RBRC  &kp PIPE  &kp DEL
                                      &kp LGUI         &trans         &kp RET      &kp SPACE  &trans    &kp RALT
            >;
        };

        function_layer {
            // ----------------------------------------------------                                             --------------------------------------------
            // | TAB   | F1     | F2     | F3     | F4     | F5   |                                             | F6   | F7   | F8   | F9  | F10   | DEL   |
            // | ESC   | BRI UP | BRI DN | VOL UP | VOL DN | MUTE |                                             | LFT  | DWN  | UP   | RGT |       | PSCRN |
            // | BTCLR | BT1    | BT2    | BT3    | BT4    | BT5  |                                             | HOME | PGUP | PGDN | END |       |       |
            //                           | GUI    |        | ENT  |                                             | SPC  |      | ALT  |
            label = "Function";
            bindings = <
&trans        &kp F1        &kp F2        &kp F3             &kp F4           &kp F5          &kp F6     &kp F7     &kp F8     &kp F9     &kp F10  &kp DEL
&kp CAPSLOCK  &kp C_BRI_UP  &kp C_BRI_DN  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE      &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none    &kp KP_NUMLOCK
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4    &kp HOME   &kp PG_UP  &kp PG_DN  &kp END    &none    &kp PRINTSCREEN
                                          &kp LGUI           &trans           &kp RET         &kp SPACE  &trans     &kp RALT
            >;
        };

        admin_layer {
            // ----------------------------------------------------                                    ----------------------------------------------------------
            // |       |        |        |        |        |      |                                    | PREV   | PLAY/PAUSE | NEXT    | VOL UP | VOL DN | MUTE |
            // |       |        |        |        |        |      |                                    | REWIND |            | FASTFWD |        |        |      |
            // | BTCLR | BT1    | BT2    | BT3    | BT4    |  BT5 |                                    |        |            |         |        |        |      |
            //                           | GUI    |        |  ENT |                                    |  SPC   |            | ALT     |

            bindings = <
&none       &none         &none         &none         &none         &none           &kp C_PREV  &kp C_PP  &kp C_NEXT  &none  &none  &kp K_MUTE
&none       &none         &none         &none         &none         &none           &kp C_RW    &none     &kp C_FF    &none  &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none     &none       &none  &none  &none
                                        &kp LGUI      &trans        &trans          &trans      &trans    &trans
            >;
        };
    };
};
